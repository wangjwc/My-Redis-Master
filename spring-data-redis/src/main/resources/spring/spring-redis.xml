<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--最大连接数, 默认8个-->
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <!--最小空闲连接数, 默认0-->
        <property name="minIdle" value="${redis.pool.minIdle}" />
        <!--最大空闲连接数, 默认8个-->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>

        <!--连接超时时是否阻塞，false时报异常,true阻塞直到超时, 默认true-->
        <property name="blockWhenExhausted" value="true"/>
        <!--获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1-->
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>

        <!--逐出-->
        <!--逐出策略（默认DefaultEvictionPolicy(当连接超过最大空闲时间,或连接数超过最大空闲连接数)）-->
        <property name="evictionPolicyClassName" value="org.apache.commons.pool2.impl.DefaultEvictionPolicy"/>
        <!--逐出连接的最小空闲时间 默认1800000毫秒(30分钟)-->
        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
        <!--对象空闲多久后逐出:
            当空闲时间>该值 && 空闲连接>最小空闲数（这里有疑问） 时直接逐出,不再根据MinEvictableIdleTimeMillis判断  (默认逐出策略)  -->
        <property name="softMinEvictableIdleTimeMillis" value="${redis.pool.softMinEvictableIdleTimeMillis}"/>

        <!--每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3-->
        <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}"/>

        <!--检查-->
        <!--定时对线程池中空闲的链接进行validateObject校验-->
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>
        <!--对拿到的connection进行validateObject校验-->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <!--在进行returnObject对返回的connection进行validateObject校验-->
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="hostName" value="${redis.hostname}" />
        <property name="port" value="${redis.port}" />
        <property name="password" value="${redis.password}" />
        <property name="database" value="${redis.database}"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>
</beans>