<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
	    http://www.springframework.org/schema/context/spring-context.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- spring自带的数据源 -->
    <!--
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       <property name="driverClassName" value="${jdbc.driver}" />
       <property name="url" value="${jdbc.url}" />
       <property name="username" value="${jdbc.username}" />
       <property name="password" value="${jdbc.password}" />
    </bean>
    -->

    <!-- 使用Druid连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="connectionProperties" value="${jdbc.driver}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.testOnReturn}"/>
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!-- 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
        <property name="poolPreparedStatements" value="${jdbc.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="filters" value="stat"/>
    </bean>
    <!-- 配置sessionFactory -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 自动扫描实体对象的包结构中存放实体类 -->
        <property name="packagesToScan" value="com.learn.hibernate" />
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!-- hibernate的相关属性配置 -->
        <property name="hibernateProperties">
            <props>
                <!-- 设置自动创建|更新|验证数据库表结构 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>

                <!-- 是否在控制台显示sql -->
                <prop key="hibernate.show_sql">true</prop>

                <!-- 设置数据库方言 -->
                  <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>-->

                <!-- 是否格式化sql，优化显示 -->
                <prop key="hibernate.format_sql">true</prop>

                <!-- 是否开启二级缓存 -->
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <!-- 是否开启查询缓存 -->
                <prop key="hibernate.cache.use_query_cache">false</prop>

                <!-- 数据库批量查询最大数 -->
                <prop key="hibernate.jdbc.fetch_size">50</prop>

                <!-- 数据库批量更新、添加、删除操作最大数 -->
                <prop key="hibernate.jdbc.batch_size">50</prop>

                <!-- 是否自动提交事务 -->
                <prop key="hibernate.connection.autocommit">false</prop>

                <!-- 指定hibernate在何时释放JDBC连接 -->
                <prop key="hibernate.connection.release_mode">auto</prop>

                <!-- 创建session方式 hibernate4.x 的方式 -->
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>

                <!--默认情况下是auto的，就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包
                    所以把它设置为none即可-->
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>

    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 定义事务管理 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- 注解实现事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>